function visualize
%Reads the periphery coordinates generated by 'acquire' to analyze and
%visualize the morphology


% Prompt for the filename of data to be analyzed
%--------------------------------------------------------------------------
[fileName,dataPath]         = uigetfile('*.*','Choose a data file');
[fileName,filePath,fileExt] = giveFileParts(fileName,dataPath);
load([filePath])


% Parameter values
%--------------------------------------------------------------------------
% Specifies the degree of smoothing of the peripheral shape of the body
% Higher values = more smoothing
param.tolerance = 1e2; 

% Number of points along the antero-posterior axis
param.numPts_AP = 200; 

% Number of points around the circumference of a cross-section of the body
param.numPts_circ = 100;

% Tissue density at each position of the structure (kg/m^3)
morph.rho_tis     = 3000 .* ones(1,param.numPts_AP);



% Smooth the data, define ellipse dimensions
%--------------------------------------------------------------------------
[xL,yL]     = smoothData(morph.periLeft.x,morph.periLeft.y,...
                param.numPts_AP,param.tolerance);
            
[xR,yR]     = smoothData(morph.periRight.x,morph.periRight.y,...
                param.numPts_AP,param.tolerance);     

[xD,yD]     = smoothData(morph.periTop.x,morph.periTop.y,...
                param.numPts_AP,param.tolerance);
            
[xV,yV]     = smoothData(morph.periBot.x,morph.periBot.y,...
                param.numPts_AP,param.tolerance);
            
            
w           = abs(yL-yR);       % Ellipse width           
c           = mean([yD;yV],1);  % Center position along y axis
h           = abs(yD-yV);       % Ellipse height
s           = xD;               % Body position


% Visually confirm the smoothing
%--------------------------------------------------------------------------
figure;

% Plot data from the top view
subplot(2,1,1)

plot(morph.periLeft.x,morph.periLeft.y,'k.',...
    xL,yL,'r-');
hold on

plot(morph.periRight.x,morph.periRight.y,'k.',...
    xR,yR,'r-')
title(['Smoothing tolerance currently at ' num2str(param.tolerance) ...
        ' (lower for more detail)'])
axis equal

% Plot data from the side view
subplot(2,1,2)

plot(morph.periTop.x,morph.periTop.y,'k.',...
    xD,yD,'r-');
hold on

plot(morph.periBot.x,morph.periBot.y,'k.',...
    xV,yV,'r-')
title(['Smoothing tolerance currently at ' num2str(param.tolerance) ...
        ' (lower for more detail)'])
axis equal

% Clear paramters not needed below
clear xL yL xR yR xD yD xV yV




% Save the smoothed data (used to calculate I & other parameters)
%--------------------------------------------------------------------------

morph.w = w;
morph.c = c;
morph.h = h;
morph.s = s;

save([dataPath filesep fileName fileExt],'morph','calConst')

%eval(['save ' dataPath filesep fileName fileExt ' morph calConst']);

%eval(['save(' '''' dataPath filesep fileName fileExt ...
%      '''' ', ' '''' 'morph' '''' ',' '''' 'calConst'  '''' ')']);


% Create coordinates for visuallizing the body in 3D
%--------------------------------------------------------------------------

% Define number of points in the ellipse   
numPts = param.numPts_circ;  


% Cap the first ellipse    
[yTemp1,zTemp1] = giveEllipse(0,c(1),w(1)/2,h(1)/2,numPts);
xTemp1          = s(1)*ones(size(yTemp1));

all             = 1:length(xTemp1)-1;
zro             = zeros(size(yTemp1(all)));
ctrs            = c(1).*ones(size(yTemp1(all)));

x = [xTemp1(all); xTemp1(all); xTemp1(all);     xTemp1(all)];
y = [zro;         yTemp1(all); yTemp1(all+1);   zro];
z = [ctrs;         zTemp1(all); zTemp1(all+1);   ctrs];

clear xTemp1 yTemp1 zTemp1 all zro ctrs


% Loop though each position on the body, creating coorindate for a pair of
% ellipses
for i = 1:length(s)-1  
  % FIRST ELLIPSE (Temp1)
    height          = h(i);
    width           = w(i);
    
    [yTemp1,zTemp1] = giveEllipse(0,c(i),width/2,height/2,numPts);
    xTemp1          = s(i)*ones(size(yTemp1));
    
    clear height width
    
  % SECOND ELLIPSE (Temp2)
    height          = h(i+1);
    width           = w(i+1);
    centerr         = c(i+1);
    
    [yTemp2,zTemp2] = giveEllipse(0,c(i+1),width/2,height/2,numPts);
    xTemp2          = s(i+1)*ones(size(yTemp2));   
    
    clear height width centerr
    
  % Store data
    all     = 1:length(xTemp2)-1;
    x       = [x [xTemp1(all); xTemp2(all); xTemp2(all+1); xTemp1(all+1)]];
    y       = [y [yTemp1(all); yTemp2(all); yTemp2(all+1); yTemp1(all+1)]];
    z       = [z [zTemp1(all); zTemp2(all); zTemp2(all+1); zTemp1(all+1)]];
    
  % Use this visualization code when troubleshooting
    if 0
        plot3(xTemp1,yTemp1,zTemp1,'g',xTemp2,yTemp2,zTemp2,'m');
        axis equal;hold on;
    end
    
    clear xTemp1 yTemp1 zTemp1 xTemp2 yTemp2 zTemp2  all
end 


% Cap the last ellipse    
[yTemp1,zTemp1] = giveEllipse(0,c(end),w(end)/2,h(end)/2,numPts);
xTemp1          = s(end)*ones(size(yTemp1));

all             = 1:length(xTemp1)-1;
zro             = zeros(size(yTemp1(all)));
ctrs            = c(end).*ones(size(yTemp1(all)));

x = [x [xTemp1(all); xTemp1(all); xTemp1(all);     xTemp1(all)]];
y = [y [zro;         yTemp1(all); yTemp1(all+1);   zro]];
z = [z [ctrs;        zTemp1(all); zTemp1(all+1);   ctrs]];

clear xTemp1 yTemp1 zTemp1 all zro ctrs



% Visualize the body in 3D
%--------------------------------------------------------------------------

% Define parameters for the image
bColor       = .5.*[1 1 1];
backColor = 0.* [1 1 1];  

% Store data in a structure & convert to real units
x_cal    = (x-s(1)) .* calConst;
y_cal    = y .* calConst;
z_cal    = z .* calConst;

clear c s x y z calConst

% Render the image
f = figure;
p = patch(x_cal,y_cal,z_cal,z_cal*0);

%modify the rendering
set(p,'FaceLighting','gouraud','LineStyle','none',...
    'BackFaceLighting','reverselit');
set(p,'FaceColor',bColor);
axis equal;
light;
view([40 25]);
set(f,'Color',backColor);
f2= get(f,'Children');
set(f2,'Color',backColor);
set(f2,'ZDir','reverse');
camzoom(2)





%==========================================================================
%================================FUNCTIONS=================================
%==========================================================================


%--------------------------------------------------------------------------
function [fileName,filePath,fileExt] = giveFileParts(fileName,pathh)

tmp = find(fileName=='.');

if length(tmp)>1
    error('You cannot have periods in the filename');
elseif length(tmp)<1
    error('Your filename needs an extension')
end

fileExt  = fileName(tmp:end);
fileName = fileName(1:tmp-1);
filePath = [pathh filesep fileName fileExt];                                        
                                          

    
%--------------------------------------------------------------------------
function [x,y] = smoothData(x,y,numPts,tolerance)
uniques     = find(~diff(x)==0);
x           = x(uniques);
y           = y(uniques);
sp          = spaps(x, y, tolerance);
x           = min(x):(max(x)-min(x))/(numPts-1):max(x);
y           = fnval(sp,x);


%--------------------------------------------------------------------------
function [x,y] = giveEllipse(xCenter,yCenter,a,b,numPts)
theta       = linspace(0,2*pi,numPts);
x           = a .* cos(theta) + xCenter;
y           = b .* sin(theta) + yCenter;


    


    